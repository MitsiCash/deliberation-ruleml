<?xml version="1.0" encoding="UTF-8"?><?xml-model href="http://deliberation.ruleml.org/1.03-psoa/relaxng/naffologeqPSOA_relaxed.rnc"?>
<RuleML xmlns="http://ruleml.org/spec" xmlns:this="http://example.org/naffologeqPSOA_relaxed.ruleml" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://ruleml.org/spec http://deliberation.ruleml.org/1.03-psoa/xsd/naffologeqPSOA.xsd">
  <!-- note the addition of the XML Schema namespace because a built-in datatype is used -->
  <!-- a syntactic example rulebase for testing the Naffologeq PSOA RuleML sublanguage -->
  <!-- based on http://deliberation.ruleml.org/1.03-psoa/exa/FOLPlus/naffologeq/naffologeq.ruleml -->
  <Assert xmlns:ruleml="http://ruleml.org/spec" mapClosure="universal" mapDirection="bidirectional">
    <Subclass>
      <Rel>TA</Rel>
      <Rel>Student</Rel>
    </Subclass>
    <Subclass>
      <Rel>TA</Rel>
      <Rel>Teacher</Rel>
    </Subclass>
    <Subclass>
      <Rel>Teacher</Rel>
      <Rel>Scholar</Rel>
    </Subclass>
    <Subclass>
      <Rel>Student</Rel>
      <Rel>Scholar</Rel>
    </Subclass>
    <Subclass>
      <Rel>horse</Rel>
      <Rel>animal</Rel>
    </Subclass>
    <Subclass>
      <Rel>duck</Rel>
      <Rel>animal</Rel>
    </Subclass>
    <Forall>
      <Var>d</Var>
      <Equal>
        <Ind>some constant</Ind>
        <Var>d</Var>
      </Equal>
    </Forall>
    <Forall>
      <Var>d</Var>
      <Implies>
        <Naf>
          <Equal>
            <Ind>some constant</Ind>
            <Var>d</Var>
          </Equal>
        </Naf>
        <Atom>
          <Rel>own</Rel>
          <Var>person</Var>
          <Var>object</Var>
        </Atom>
      </Implies>
    </Forall>
    <Forall>
      <Var>person</Var>
      <Var>object</Var>
      <Implies>
        <Naf mapDirection="bidirectional">
          <Implies node="this:#disclaiming-of-other-persons">
            <Equal>
              <Expr>
                <Fun>f</Fun>
                <tupdep>
                  <Tuple>
                    <Ind>a</Ind>
                    <Ind>b</Ind>
                  </Tuple>
                </tupdep>
                <tupdep>
                  <Tuple>
                    <Ind>a2</Ind>
                    <Ind>b2</Ind>
                  </Tuple>
                </tupdep>
                <slotdep>
                  <Ind>a1</Ind>
                  <Ind>b1</Ind>
                </slotdep>
                <slotdep>
                  <Ind>a2</Ind>
                  <Ind>b2</Ind>
                </slotdep>
              </Expr>
              <Var>d</Var>
            </Equal>
            <Equal>
              <Ind>some constant</Ind>
              <Var>d</Var>
            </Equal>
          </Implies>
        </Naf>
        <Atom>
          <Rel>own</Rel>
          <Var>person</Var>
          <Var>object</Var>
        </Atom>
      </Implies>
    </Forall>
    <Equivalent>
      <Atom>
        <Rel>own</Rel>
        <Skolem>test</Skolem>
        <Var>person</Var>
        <Var>object</Var>
      </Atom>
      <Atom>
        <Rel>belongs</Rel>
        <Var>object</Var>
        <Var>person</Var>
      </Atom>
    </Equivalent>
    <Implies node="this:#claiming-through-disclaimers">
      <And>
        <Equal>
          <Ind>some constant</Ind>
          <Var>d</Var>
        </Equal>
        <Naf mapClosure="existential">
          <Exists>
            <Var>merchant</Var>
            <And>
              <Atom>
                <Rel>buy</Rel>
                <Var>person</Var>
                <Var>merchant</Var>
                <Var>object</Var>
              </Atom>
              <Atom>
                <Rel>keep</Rel>
                <Var>person</Var>
                <Var>object</Var>
              </Atom>
              <Atom>
                <oid>
                  <Ind>j1</Ind>
                </oid>
                <Rel>g</Rel>
                <Ind>u</Ind>
                <Expr>
                  <!-- <slot>
                        <Ind>d1</Ind>
                        <Ind>e1</Ind>
                      </slot>-->
                  <!-- <slot>
                        <Ind>d2</Ind>
                        <Ind>e2</Ind>
                      </slot>-->
                  <Fun>p</Fun>
                  <tupdep>
                    <Tuple>
                      <Ind>a</Ind>
                      <Ind>b</Ind>
                    </Tuple>
                  </tupdep>
                  <tupdep>
                    <Tuple>
                      <Ind>a2</Ind>
                      <Ind>b2</Ind>
                    </Tuple>
                  </tupdep>
                  <slotdep>
                    <Ind>a1</Ind>
                    <Ind>b1</Ind>
                  </slotdep>
                  <slotdep>
                    <Ind>a2</Ind>
                    <Ind>b2</Ind>
                  </slotdep>
                </Expr>
                <Ind>v</Ind>
                <slotdep>
                  <Ind>a3</Ind>
                  <Ind>b3</Ind>
                </slotdep>
                <slotdep>
                  <Ind>a4</Ind>
                  <Ind>b4</Ind>
                </slotdep>
                <slot><Ind>d3</Ind><Ind>e3</Ind></slot>
                <slot><Ind>d4</Ind><Ind>e4</Ind></slot>
              </Atom>
            </And>
          </Exists>
        </Naf>
        <Forall>
          <Var>x</Var>
          <Implies node="this:#disclaiming-of-other-persons">
            <Atom>
              <Rel>unequal</Rel>
              <Var>x</Var>
              <Var>person</Var>
            </Atom>
            <Atom>
              <Rel>disclaim</Rel>
              <Var>x</Var>
              <Skolem>test</Skolem>
              <Var>object</Var>
            </Atom>
          </Implies>
        </Forall>
        <Atom>
          <Rel>keep</Rel>
          <Var>person</Var>
          <Var>object</Var>
        </Atom>
      </And>
      <Atom>
        <Rel>claim</Rel>
        <Var>person</Var>
        <Var>object</Var>
      </Atom>
    </Implies>
    <Implies node="this:#claiming-or-relinquishing-through-disclaimers">
      <Forall>
        <Var>x</Var>
        <Implies node="this:#disclaiming-of-other-persons">
          <Atom>
            <Rel>unequal</Rel>
            <Var>x</Var>
            <Var>person</Var>
          </Atom>
          <Atom>
            <Rel>disclaim</Rel>
            <Var>x</Var>
            <Var>object</Var>
          </Atom>
        </Implies>
      </Forall>
      <Or>
        <Atom>
          <Rel>claim</Rel>
          <Var>person</Var>
          <Var>object</Var>
        </Atom>
        <Atom>
          <Rel>relinquish</Rel>
          <Var>person</Var>
          <Var>object</Var>
        </Atom>
      </Or>
    </Implies>
    <Implies>
      <And>
        <Atom>
          <Rel>friend</Rel>
          <Ind>Jane</Ind>
          <Ind>Joan</Ind>
          <Skolem/>
          <Ind>Jack</Ind>
          <Var>y</Var>
          <Ind>Frank</Ind>
          <Plex>
            <Ind/>
          </Plex>
          <slot><Ind>yar</Ind><Expr><!-- <Plex>
                  <Var>z</Var>
                  <slot>
                    <Ind>yar2</Ind>
                    <Var>c</Var>
                  </slot>
                </Plex>--><Fun>constructor</Fun></Expr></slot>
        </Atom>
      </And>
      <Or>
        <Atom>
          <Rel>friend</Rel>
          <Var>x</Var>
          <Var>y</Var>
          <Ind>Steph</Ind>
          <slot><Ind>t</Ind><Var>b</Var></slot>
        </Atom>
        <Atom>
          <Rel>friend</Rel>
          <Var>x</Var>
          <Var>y</Var>
          <Ind>Jill</Ind>
          <slot><Ind>t</Ind><Var>b</Var></slot>
        </Atom>
      </Or>
    </Implies>
    <Atom>
      <Rel>some relation</Rel>
      <Ind>constant a</Ind>
      <Ind>constant b</Ind>
      <slot><Ind>role_name1</Ind><Ind>role 1</Ind></slot>
      <slot><Ind>role_name2</Ind><Ind>role 2</Ind></slot>
    </Atom>
    <Equal>
      <Expr>
        <Fun per="value">some function</Fun>
        <Ind>arg1</Ind>
        <Ind>arg2</Ind>
        <Ind>arg3</Ind>
      </Expr>
      <Expr>
        <Fun per="value">some other function</Fun>
        <Ind>arg4</Ind>
        <Ind>arg5</Ind>
        <Ind>arg6</Ind>
      </Expr>
    </Equal>
  </Assert>
</RuleML>