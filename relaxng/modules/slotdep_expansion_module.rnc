namespace dc = "http://purl.org/dc/elements/1.1/"
namespace dcterms = "http://purl.org/dc/terms/"

dcterms:title [ "RuleML Dependent Slots" ]
dcterms:identifier [ "http://deliberation.ruleml.org/1.03/relaxng/modules/slotdep_expansion_module.rnc" ]
dcterms:isPartOf [ "http://deliberation.ruleml.org/1.03/spec" ]
dcterms:creator [ "http://wiki.ruleml.org/index.php/User:Athant" ]
dc:subject [ "RuleML, dependent slot" ]
dcterms:description [ "The expansion module for dependent slots." ]
dcterms:language [ "en" ]
dc:rights [
  'Copyright 2015 RuleML Inc. -- Licensed under the RuleML Specification License, Version 1.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://ruleml.org/licensing/RSL1.0-RuleML. Disclaimer: THIS SPECIFICATION IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED WARRANTIES, ..., EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. See the License for the specifics governing permissions and limitations under the License.'
]
dcterms:rights [ "http://ruleml.org/licensing/RSL1.0-RuleML" ]
dcterms:relation [ "http://deliberation.ruleml.org" ]
start |= slotdep.edge.def
# This module declares the following RuleML elements and attributes:
#            * slotdep

## In atomic formulas, zero or more dependent slots are allowed.
slotdepTerms.sequence |= slotdep-edge.choice*
slotdepTermsForAtoms.sequence |= slotdepTerms.sequence

## In expressions, zero or more dependent slots are allowed.
slotdepTermsForExpressions.sequence |= slotdepTerms.sequence

## an extension point for specializations of the slotdep tag name.  
slotdep-edge.choice |= slotdep.edge.def
slotdep.edge.def =
  
  ## A user-defined slotdep (property). See http://deliberation.ruleml.org/1.03/glossary/#gloss-slotdep
  element slotdep { slotdep.type.def }
slotdep.type.def = (slotdep-datt.choice & reslotdep.attlist), slotdep.content

## The slotdep element accepts optional cardinality and  weight attributes. 
reslotdep.attlist &= cardinality-att.choice?
reslotdep.attlist &= weight-att.choice?

## The slotdep content model consists of a key (first position) and a filler (second position).
slotdep.content |= slotdepKeyTerm.choice, slotdepFillerTerm.choice

## The key (first position) in a slotdep contains an interpreted term or data, which may be simple or compound.
slotdepKeyTerm.choice |= SimpleKeyTerm.choice | CompoundTerm.choice
# For the declaration of term patterns, see the term module (individual_expansion_module).

## The filler (second position) in a slotdep contains any single term.
slotdepFillerTerm.choice |= AnyTerm.choice
# For the declaration of term patterns, see the term module (individual_expansion_module).
edge.choice |= slotdep.edge.def
#
reslotdep.attlist &= commonInit.attlist?
